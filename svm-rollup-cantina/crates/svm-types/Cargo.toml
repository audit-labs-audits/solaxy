[package]
name = "svm-types"
version.workspace = true
edition.workspace = true
license-file.workspace = true
authors.workspace = true
homepage.workspace = true
publish.workspace = true
repository.workspace = true

[dependencies]
# External dependencies from crates.io
anyhow = { workspace = true }
arbitrary = { workspace = true, optional = true }
bincode = { workspace = true }
borsh = { workspace = true }
hex = { workspace = true }
jsonschema = { workspace = true, optional = true }
proptest = { workspace = true, optional = true }
proptest-derive = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
sha2 = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }

# Sovereign dependencies
sov-address = { workspace = true }
sov-mock-zkvm = { workspace = true, optional = true }
sov-modules-api = { workspace = true }
sov-rollup-interface = { workspace = true }
sov-sp1-adapter = { workspace = true }
sov-state = { workspace = true }

# Solana & Agave
solana-sdk = { workspace = true }

# Nitro dependencies
svm-engine-keys = { workspace = true }

[dev-dependencies]
# Sovereign dependencies
sov-test-utils = { workspace = true, features = ["arbitrary"] }

# Locals
svm-types = { workspace = true, features = ["dev"] }

[lints]
workspace = true

[features]
default = []
dev = [ "arbitrary", "native", "test-utils" ]
arbitrary = [
	"dep:arbitrary",
	"dep:jsonschema",
	"dep:proptest",
	"dep:proptest-derive",
	"dep:rand",
	"sov-address/arbitrary",
	"sov-mock-zkvm/arbitrary",
	"sov-modules-api/arbitrary",
	"sov-rollup-interface/arbitrary",
	"sov-sp1-adapter/arbitrary",
	"sov-state/arbitrary",
	"sov-test-utils/arbitrary",
	"svm-types/arbitrary",
]
native = [
	"dep:jsonschema",
	"dep:rand",
	"sov-address/native",
	"sov-mock-zkvm/native",
	"sov-modules-api/native",
	"sov-rollup-interface/native",
	"sov-sp1-adapter/native",
	"sov-state/native",
	"svm-engine-keys/keypair",
	"svm-types/native",
]
test-utils = [ "dep:sov-mock-zkvm" ]
